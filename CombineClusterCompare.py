from sklearn.cluster import DBSCAN
from collections import Counter
import pandas as pd
import numpy as np
import sys
import logging
import os
from ParseBam import BamFileReadParser
import argparse

if __name__ == "__main__":

    arg_parser = argparse.ArgumentParser()
    arg_parser.add_argument("-a", "--input_bam_A",
                            help="First Input bam file, coordinate sorted with index present")
    arg_parser.add_argument("-b", "--input_bam_B",
                            help="Second Input bam file, coordinate sorted with index present")
    arg_parser.add_argument("-o", "--output_dir",
                            help="Output directory to save figures, defaults to bam file loaction")
    arg_parser.add_argument("-bins",
                            help="File with each line being one bin to extract and analyze, "
                                 "generated by CalculateCompleteBins")

    args = arg_parser.parse_args()

    input_bam_a = args.input_bam_A
    input_bam_b = args.input_bam_B
    bins_file = args.bins

    # Check all inputs are supplied
    if not input_bam_a or not input_bam_b or not bins_file:
        raise FileNotFoundError("Please make sure all required input files are supplied")

    bam_parser_A = BamFileReadParser(input_bam_a, 20)
    bam_parser_B = BamFileReadParser(input_bam_b, 20)

    # Read in bins
    bins=[]
    with open(bins_file, 'r') as f:
        for line in f:
            data = line.strip().split(",")
            bins.append("_".join([data[0], data[2]]))





    print("Done")