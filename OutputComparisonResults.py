import os


# This class will be called by CombineClusterCompare.py to output its multiprocessing results output into csv files
class OutputComparisonResults:

    def __init__(self, results):
        """
        :param results: Results objected generated by CompareClusterCompare.py's Pool.map of process_bins
        """
        self.results = results

    def write_to_output(self, filepath=None, prefix=None):
        """
        :param prefix: Prefix to name the output files
        :param filepath: Path to save the output files
        :return: None
        """

        if prefix and filepath:
            output_summary = open("{}_summary.csv".format(os.path.join(filepath, prefix)), "w")
            output_comparisons = open("{}_comparisons.csv".format(os.path.join(filepath, prefix)), "w")

            output_summary.write("bin,unique_clusters,common_clusters,total_clusters\n")
            output_comparisons.write("bin,unique_cluster_input,unique_methylation,common_methlyation,change\n")

            for result in self.results:
                if result:
                    # write the summary
                    summary_line = result[0]
                    comparison_lines = result[1]
                    output_summary.write(summary_line + "\n")
                    # write out the comparisons
                    for comparison in comparison_lines:
                        output_comparisons.write(comparison + "\n")
                else:
                    continue

            output_summary.close()
            output_comparisons.close()

            return
