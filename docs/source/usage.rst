===============
Using CluBCpG
===============
.. contents:: Table of Contents

Introduction
=============
After installing CluBCpG to your python environment there should not be a new set of command line tools on your PATH.
They all begin with ``clubcpg-``. Each one of them comes with a help command which displays the command line
arguments each tool accepts.

For example you can run

    .. code-block:: bash

        clubcpg-coverage --help

and display the following

    .. code-block:: console

        usage: clubcpg-coverage [-h] [-a INPUT_BAM_A] [-o OUTPUT_DIR]
                                [-bin_size BIN_SIZE] [-n NUM_PROCESSORS]
                                [-chr CHROMOSOME] [--read1_5 READ1_5]
                                [--read1_3 READ1_3] [--read2_5 READ2_5]
                                [--read2_3 READ2_3] [--no_overlap [NO_OVERLAP]]

        optional arguments:
          -h, --help            show this help message and exit
          -a INPUT_BAM_A, --input_bam_A INPUT_BAM_A
                                First Input bam file, coordinate sorted with index
                                present
          -o OUTPUT_DIR, --output_dir OUTPUT_DIR
                                Output directory to save figures, defaults to bam file
                                loaction
          -bin_size BIN_SIZE    Size of bins to extract and analyze, default=100
          -n NUM_PROCESSORS, --num_processors NUM_PROCESSORS
                                Number of processors to use for analysis, default=1
          -chr CHROMOSOME, --chromosome CHROMOSOME
                                Chromosome to analyze, example: 'chr19', required
          --read1_5 READ1_5     integer, read1 5' m-bias ignore bp, default=0
          --read1_3 READ1_3     integer, read1 3' m-bias ignore bp, default=0
          --read2_5 READ2_5     integer, read2 5' m-bias ignore bp, default=0
          --read2_3 READ2_3     integer, read2 3' m-bias ignore bp, default=0
          --no_overlap [NO_OVERLAP]
                                bool, remove any overlap between paired reads and
                                stitch reads together when possible, default=True

details of each flag are elaborated upon below in :ref:`command_line_tools_label`.

Sequencing data pre-processing
=================================
CluBCpG uses BAM files generated by standard bioinformatics pipelines. For the most part you can generate this BAM file
in any way you see fit. However CluBCpG does have a few requirements:

1. The bisulfite read mapping should be performed with ``Bismark``

    .. WARNING::
        CluBCpG compatibility has **NOT** been tested with other bisulfite read mappers.

2. The BAM file should be **cooridinate sorted** and have an index file (``.bai``) present in its directory. Samtools
can be utilized for both of these steps using ``samtools sort`` and ``samtools index``.


Typical workflow
=================

0. Obtain your correctly processed BAM file(s)

    * ClubCpG accepts one or two BAM files for processing

1. Use ``clubcpg-coverage`` to calculate the number of reads fully covering all bins across the genome.

    a) This process should be performed on individual chromosomes

    .. HINT::
        This is an excellent step to parallelize if running in a HPC environment. ``clubcpg-coverage``
        has a flag, ``-n`` to specify the number of CPUs to use during processing

        Additionally, each chromosome can be run on an independent compute node. No need to split the BAM file. CluBCpG
        will only operate on the chromosome specified with the ``-chr`` flag.

.. _command_line_tools_label:

Command line tools
====================
Words

clubcpg-coverage
------------------
Words

clubcpg-cluster
------------------
Words

